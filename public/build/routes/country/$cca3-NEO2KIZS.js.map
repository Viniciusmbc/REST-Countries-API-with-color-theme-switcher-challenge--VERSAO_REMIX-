{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\viniciuscaceres\\Downloads\\node-grqkjw\\app\\routes\\country\\$cca3.tsx?browser", "../../../../app/routes/country/$cca3.tsx"],
  "sourcesContent": ["export { default } from \"C:\\\\Users\\\\viniciuscaceres\\\\Downloads\\\\node-grqkjw\\\\app\\\\routes\\\\country\\\\$cca3.tsx\";", "import { Form, useLoaderData } from \"remix\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nexport async function loader({ params }) {\r\n  params.cca3 = params.cca3.toLowerCase();\r\n  const countries = await fetch(\r\n    `https://restcountries.com/v3.1/alpha/${params.cca3}?fields=name,flags,population,region,subregion,capital,languages,tld,currencies,borders`\r\n  );\r\n  const country = await countries.json();\r\n  return country;\r\n}\r\n\r\n\r\nexport default function CountryDetails() {\r\n\r\n  const country = useLoaderData();\r\n  const [borders, setBorders] = useState(country.borders);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n // Fetch data using useFetcher\r\n  const [countries, setCountries] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        'https://restcountries.eu/rest/v2/all?fields=name;capital;region;subregion;population;languages;flag;currencies;borders'\r\n      );\r\n      const data = await response.json();\r\n      setIsLoaded(true);\r\n      setCountries(data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={country.flags.png}\r\n        alt={`bandeira de ${country.name.common}`}\r\n      />\r\n      <h2> {countries} </h2>\r\n      <div>\r\n        <h2> {country.name.common}</h2>\r\n        <ul>\r\n          <li>\r\n            Native Name:\r\n            {\r\n              Object.values(country.name.nativeName)[\r\n                Object.values(country.name.nativeName).length - 1\r\n              ].common\r\n            }\r\n          </li>\r\n          <li>Population: {country.population}</li>\r\n          <li>Region: {country.region}</li>\r\n          <li>Sub Region:{country.subregion}</li>\r\n          <li>Capital:{country.capital}</li>\r\n          <li>Top Level Domain: {country.tld[0]}</li>\r\n          <li>Curriencies: {Object.values(country.currencies)[0].name} </li>\r\n          <li>\r\n            Languages:\r\n            {Object.values(country.languages).join(\", \")}\r\n          </li>\r\n          <li>Border Country: {borders}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],
  "mappings": ";;;;;;;;;AAAA;;;ACAA;AACA,mBAAoC;AAarB,0BAA0B;AAEvC,QAAM,UAAU;AAChB,QAAM,CAAC,SAAS,cAAc,2BAAS,QAAQ;AAC/C,QAAM,CAAC,SAAS,cAAc,2BAAS;AAGvC,QAAM,CAAC,WAAW,gBAAgB,2BAAS;AAC3C,QAAM,CAAC,OAAO,YAAY,2BAAS;AACnC,QAAM,CAAC,UAAU,eAAe,2BAAS;AAEzC,8BAAU,MAAM;AACd,UAAM,YAAY,YAAY;AAC5B,YAAM,WAAW,MAAM,MACrB;AAEF,YAAM,OAAO,MAAM,SAAS;AAC5B,kBAAY;AACZ,mBAAa;AAAA;AAEf;AAAA,KACC;AAGH,SACE,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IACE,KAAK,QAAQ,MAAM;AAAA,IACnB,KAAK,eAAe,QAAQ,KAAK;AAAA,MAEnC,oCAAC,MAAD,MAAI,KAAE,WAAU,MAChB,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAI,KAAE,QAAQ,KAAK,SACnB,oCAAC,MAAD,MACE,oCAAC,MAAD,MAAI,gBAGA,OAAO,OAAO,QAAQ,KAAK,YACzB,OAAO,OAAO,QAAQ,KAAK,YAAY,SAAS,GAChD,SAGN,oCAAC,MAAD,MAAI,gBAAa,QAAQ,aACzB,oCAAC,MAAD,MAAI,YAAS,QAAQ,SACrB,oCAAC,MAAD,MAAI,eAAY,QAAQ,YACxB,oCAAC,MAAD,MAAI,YAAS,QAAQ,UACrB,oCAAC,MAAD,MAAI,sBAAmB,QAAQ,IAAI,KACnC,oCAAC,MAAD,MAAI,iBAAc,OAAO,OAAO,QAAQ,YAAY,GAAG,MAAK,MAC5D,oCAAC,MAAD,MAAI,cAED,OAAO,OAAO,QAAQ,WAAW,KAAK,QAEzC,oCAAC,MAAD,MAAI,oBAAiB;AAAA;",
  "names": []
}
