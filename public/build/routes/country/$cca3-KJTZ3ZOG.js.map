{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\viniciuscaceres\\Downloads\\node-grqkjw\\app\\routes\\country\\$cca3.tsx?browser", "../../../../app/routes/country/$cca3.tsx"],
  "sourcesContent": ["export { default } from \"C:\\\\Users\\\\viniciuscaceres\\\\Downloads\\\\node-grqkjw\\\\app\\\\routes\\\\country\\\\$cca3.tsx\";", "\r\nimport { useLoaderData } from \"remix\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Patch the country route\r\n// Language: typescript\r\n// Path: app\\routes\\country\\index.tsx\r\n// Compare this snippet from app\\routes\\country\\index.tsx:\r\nexport async function loader({ params, request }) {\r\n  params.cca3 = params.cca3.toLowerCase();\r\n  \r\n  const countries = await fetch(\r\n    `https://restcountries.com/v3.1/alpha/${params.cca3}?fields=name,flags,population,region,subregion,capital,languages,tld,currencies`\r\n  );\r\n  const country = await countries.json();\r\n  return country;\r\n}\r\n\r\nconst [borders, setBorders] = useState(country.borders);\r\nconst [loading, setLoading] = useState(true);\r\n\r\nuseEffect(() => {\r\n  console.log(borders);\r\n  if (borders != undefined) {\r\n    setLoading(true);\r\n\r\n    async function promises() {\r\n      const vizinhos = borders.map(async (border) => {\r\n        const data = await fetch(\r\n          `https://restcountries.com/v3.1/alpha?codes=${border}`\r\n        );\r\n        const result = await data.json();\r\n        const countryName = result.map(({ name }) => `${name.common} `);\r\n        setLoading(false);\r\n\r\n        return countryName;\r\n      });\r\n\r\n      const resolved = await Promise.all(vizinhos);\r\n      setBorders(resolved);\r\n      setLoading(false);\r\n    }\r\n\r\n    promises();\r\n  }\r\n}, []);\r\n\r\nexport default function CountryDetails() {\r\n  const country = useLoaderData();\r\n\r\n  return (\r\n    <div>\r\n     <img\r\n        src={country.flags.png}\r\n        alt={`bandeira de ${country.name.common}`}\r\n      ></img>\r\n      <div>\r\n        <h2> {country.name.common}</h2>\r\n        <ul>\r\n          <li>\r\n            Native Name:\r\n            {\r\n              Object.values(country.name.nativeName)[\r\n                Object.values(country.name.nativeName).length - 1\r\n              ].common\r\n            }\r\n          </li>\r\n          <li>Population: {country.population}</li>\r\n          <li>Region: {country.region}</li>\r\n          <li>Sub Region:{country.subregion}</li>\r\n          <li>Capital:{country.capital}</li>\r\n          <li>Top Level Domain: {country.tld[0]}</li>\r\n          <li>Curriencies: {Object.values(country.currencies)[0].name} </li>\r\n          <li>\r\n            Languages:\r\n            {Object.values(country.languages).join(\", \")}\r\n          </li>\r\n          <li>Border Countries: </li>\r\n        </ul>\r\n      </div>\r\n          </div>\r\n  );\r\n}\r\n"],
  "mappings": ";;;;;;;;;AAAA;;;ACAA;AAEA,mBAAoC;AAgBpC,IAAM,CAAC,SAAS,cAAc,2BAAS,QAAQ;AAC/C,IAAM,CAAC,SAAS,cAAc,2BAAS;AAEvC,4BAAU,MAAM;AACd,UAAQ,IAAI;AACZ,MAAI,WAAW,QAAW;AACxB,eAAW;AAEX,8BAA0B;AACxB,YAAM,WAAW,QAAQ,IAAI,OAAO,WAAW;AAC7C,cAAM,OAAO,MAAM,MACjB,8CAA8C;AAEhD,cAAM,SAAS,MAAM,KAAK;AAC1B,cAAM,cAAc,OAAO,IAAI,CAAC,EAAE,WAAW,GAAG,KAAK;AACrD,mBAAW;AAEX,eAAO;AAAA;AAGT,YAAM,WAAW,MAAM,QAAQ,IAAI;AACnC,iBAAW;AACX,iBAAW;AAAA;AAGb;AAAA;AAAA,GAED;AAEY,0BAA0B;AACvC,QAAM,WAAU;AAEhB,SACE,oCAAC,OAAD,MACC,oCAAC,OAAD;AAAA,IACG,KAAK,SAAQ,MAAM;AAAA,IACnB,KAAK,eAAe,SAAQ,KAAK;AAAA,MAEnC,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAI,KAAE,SAAQ,KAAK,SACnB,oCAAC,MAAD,MACE,oCAAC,MAAD,MAAI,gBAGA,OAAO,OAAO,SAAQ,KAAK,YACzB,OAAO,OAAO,SAAQ,KAAK,YAAY,SAAS,GAChD,SAGN,oCAAC,MAAD,MAAI,gBAAa,SAAQ,aACzB,oCAAC,MAAD,MAAI,YAAS,SAAQ,SACrB,oCAAC,MAAD,MAAI,eAAY,SAAQ,YACxB,oCAAC,MAAD,MAAI,YAAS,SAAQ,UACrB,oCAAC,MAAD,MAAI,sBAAmB,SAAQ,IAAI,KACnC,oCAAC,MAAD,MAAI,iBAAc,OAAO,OAAO,SAAQ,YAAY,GAAG,MAAK,MAC5D,oCAAC,MAAD,MAAI,cAED,OAAO,OAAO,SAAQ,WAAW,KAAK,QAEzC,oCAAC,MAAD,MAAI;AAAA;",
  "names": []
}
